# version: '3'
services:
  # Database. mysql -P 8083 --protocol=tcp -u root -p
  database:
    image: mysql:latest
    container_name: database
    ports:
      - 8083:3306
    volumes:
      - ./test-sql-2:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: showsDB

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  vault-server:
    image: hashicorp/vault:1.13.3
    container_name: vault
    ports:
      - "8200:8200"
    restart: always
    environment:
      VAULT_ADDR: "http://127.0.0.1:8200"
    volumes:
      - ./volumes/logs:/vault/logs
      - ./volumes/file:/vault/file
      - ./volumes/config:/vault/config
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.json

  auth-server:
    image: auth-server:latest
    container_name: auth-server
    ports:
      - "9000:9000"
    depends_on:
      - database
      - vault-server

  showsdb-server:
    image: showsdb-server:latest
    container_name: showsdb-server
    ports:
      - "8080:8080"
    depends_on:
      - database
      - vault-server
      - auth-server
      - kafka