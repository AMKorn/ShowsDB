scalar Date

type Query {
    shows: [Show]
    showById(id: ID!): Show
    seasons(showId: ID!): [Season]
    season(showId: ID!, seasonNumber: Int): Season
    episodes(showId: ID!, seasonNumber: Int): [Episode]
    episode(showId: ID!, seasonNumber: Int, episodeNumber: Int): Episode
    actors: [Actor]
    actorById(id: ID!): Actor
}

type Mutation {
    addShow(show: ShowInput): Show
}

type Show {
    id: ID!
    name: String!
    country: String
    numberOfSeasons: Int
    numberOfEpisodes: Int
}

type Season {
    showId: ID!
    seasonNumber: Int!
    numberOfEpisodes: Int
}

type Episode {
    showId: ID!
    seasonNumber: Int!
    episodeNumber: Int!
    name: String
    releaseDate: Date
}

type Actor {
    id: ID!
    name: String!
    country: String
    birthDate: Date
}

input ShowInput {
    name: String!
    country: String
}

